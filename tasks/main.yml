---
- name: install postgresql repository
  yum:
    name: "{{ PGSQL_PACKAGE_RPM }}"

- name: install postgresql {{ PGSQL_VERSION }} package
  yum:
    name:
      - "{{ PGSQL_PACKAGE_BASE }}-server"
      - "{{ PGSQL_PACKAGE_BASE }}-devel"
      - "{{ PGSQL_PACKAGE_BASE }}-contrib"

- name: set postgres database base directory as facts
  set_fact:
    pgsql_base_dir: "/var/lib/pgsql/{{ PGSQL_VERSION }}"
  when: pgsql_base_dir is undefined

- name: set postgres database directories as facts
  set_fact:
    pgsql_data_dir: "{{ pgsql_base_dir }}/data"
    pgsql_archive_dir: "{{ pgsql_base_dir }}/archive"
    pgsql_backup_dir: "{{ pgsql_base_dir }}/backups"

- name: create postgres database directories
  file:
    path: "{{ item }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'
  with_items:
    - "{{ pgsql_base_dir }}"
    - "{{ pgsql_data_dir }}"
    - "{{ pgsql_archive_dir }}"
    - "{{ pgsql_backup_dir }}"

- name: detect database cluster
  stat:
    path: "{{ pgsql_data_dir }}/PG_VERSION"
  register: dbcluster

- name: setup database cluster
  become: yes
  become_user: postgres
  command: "/usr/pgsql-{{ PGSQL_VERSION }}/bin/initdb -E UTF8 --locale=C -D {{ pgsql_data_dir }}"
  when: not dbcluster.stat.exists

- name: set postgresql.conf
  blockinfile:
    dest: "{{ pgsql_data_dir }}/postgresql.conf"
    backup: true
    block: |
      listen_addresses = '*'
      port = {{ pgsql_listen_port }}
      wal_level = replica
      archive_mode = on
      archive_command = 'cp %p {{ pgsql_archive_dir }}/%f'
      max_wal_senders = 2
      hot_standby = on
    owner: postgres
    group: postgres
    mode: '0600'
  notify: restart postgresql service

- name: start postgresql service
  service:
      name: "postgresql-{{ PGSQL_VERSION }}"
      state: started
      enabled: yes
  when: not dbcluster.stat.exists

- name: create role
  become: yes
  become_user: postgres
  command: psql -c "CREATE ROLE {{ pgsql_user }} LOGIN PASSWORD '{{ pgsql_passwd }}';"
  when: not dbcluster.stat.exists

- name: create database
  become: yes
  become_user: postgres
  command: psql -c "CREATE DATABASE {{ pgsql_database }};"
  when: not dbcluster.stat.exists

- name: set pg_hba conf
  lineinfile:
    backup: true
    path: '{{ pgsql_data_dir }}/pg_hba.conf'
    regexp: '^host {{ pgsql_database }} {{ pgsql_user }} all md5$'
    line: 'host {{ pgsql_database }} {{ pgsql_user }} all md5'
    owner: postgres
    group: postgres
    mode: '0600'
  notify: restart postgresql service

  #- include_tasks: keepalived.yml
  #  when: pgsql_cluster != None and not dbcluster.stat.exists
  #  tags: postgresql
